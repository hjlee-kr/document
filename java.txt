자바
- 클래스
: 이름의 첫글자 대문자로 시작한다.
- 패키지 : 클래스의 경로, 패키지는 소문자로만 작성

메인함수(메서드)
public static void main(String[] args) {

}

한개의 프로그램에는 main함수가 하나만 있어야 한다.
프로그램이 시작되는 곳

기본자료형 (8가지)
- 문자형: char
- 정수형: byte, short, int, long
- 실수형: float, double
- 논리형: boolean,

Wrapper class
- Charater, Byte, Short, Integer, Long, Float, Double, Boolean

조건문 : if, if~else, switch~case
반복문 : for, while, do~while
break : 처음만나는 반복문, switch문을 빠져나갈때
continue : 반복문의 처음으로 이동할때

동일한 자료형을 여러개 저장할때 => 배열
배열의 대표클래스 : ArrayList
HashMap : key와 value의 쌍으로 저장

클래스, 추상클래스, 인터페이스
생성자 : 클래스이름과 동일한이름의 메서드
생성자를 선언하지 않으면 기본생성자를 사용
생성자를 선언하면 기본생성자는 존재하지 않는다.
사용하고자하는 생성자를 여러개 만들수 있다.

- public : 누구나 접근가능
- private : 접근불가
- protected : 상속받은 관계에서만 접근가능
- x(default) : 같은 패키지내어서만 접근가능

- 추상클래스는 abstract메서드가 하나이상있거나 
  없어도 클래스를 abstract로 선언하면 추상클래스이다.

- 인터페이스는 abstract 메서드로만 이루어진 클래스
- interface로 선언한 클래스안의 메서드는 abstract생략가능

- 상속
- 상속받은 클래스는 부모클래스의 모든 메서드와 변수 사용이 가능
(단, private으로 선언된것은 예외 - 불가능)

- 클래스의 생성은 일반클래스만 가능 - 인터페이스, 추상클래스는 생성불가
- 인터페이스와 추상클래스는 상속받은 클래스에서 메서드를 구현한후
생성이 가능합니다.

<Servlet Lagacy Project>
- HTML5, CSS3, Javascript, JQuery, Bootstrap4(CSS3, Jquery)
- servlet이 main의 역할을 한다.
- servlet에서 urlmapping을 사용하여 컨트롤러(모듈)로 이동
- Controller->Service->DAO->데이터베이스접근
- 백엔드에서 프런트엔트 자료를 넘길때 request에 담아서 전달(key&value) 
- 또는 url ?이름=값&... 이후에 붙여서 전달
- 프런트엔드->백엔트로 자료를 넘길때는 "name" 속성을 이용해서 전달
- url에 적힌것은 param.이름 으로 가져옴
- request에 담긴것은 객체이름으로 접근
- sendRedirect: 페이지가 변경, forword: 화면이 전환이 안될때
- return "redirect:전체경로", return "views아래경로/jsp이름"

<Spring Framework>
- servlet 기반의 프로젝트를 쉽게 사용하기 위한 프레임워크(폼)
- DispatcherServlet를 Spring이 대신 처리해 준다.(미리구현되어있다)
- 어노테이션을 사용하여 쉽게 코딩하게 해준다.
- 전자정부프레임워크가 Spring을 기반으로 구성되어있다.
- Lombok 라이브러리 (getter, setter를 자동구성)
- myBatis (mapper.xml에 sql문을 구성), Mapper interface사용

프로그램을 개발할때
- 개발환경
  : 개발언어 (version확인 필수)
  : 개발툴은?
- 필요한 라이브러리가 있는지 체크
- 시간체크(기간)
- 할수있는것, 없는것 => 되는것 or 안되는것
- 웹브라우저의 개발자모드를 잘 활용해라.
  : console.log()
- tomcat9, tomcat10은 차이가 많이 난다.
  (javax)  (jakarta) -> servlet 구성 name스페이스가 변경

html 대신에 jsp 사용